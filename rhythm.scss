@use "sass:map";
@use "sass:math";
@use "sass:string";

// Global variables
// ----------------
$global-rhythm-size: 8px !default;
$global-baseline-raito: 0 !default;

// Helper functions
// ----------------
@function _unit($value) {
  @return string.slice(#{$value * 0}, 2, -1);
}

@function _calc-baseline-from-bottom($font-map) {
  $_font-size: map.get($font-map, font-size);
  $_line-height-rhythm: map.get($font-map, line-height-rhythm);
  $_baseline-ratio: map.get($font-map, baseline-ratio) or $global-baseline-raito;
  $_half-space: ($_line-height-rhythm * $global-rhythm-size - $_font-size) / 2;
  $_baseline-height: $_font-size * $_baseline-ratio;

  @return math.round($_half-space + $_baseline-height);
}

@function _calc-baseline-from-top($font-map) {
  $_line-height: map.get($font-map, line-height-rhythm) * $global-rhythm-size;

  @return $_line-height - _calc-baseline-from-bottom($font-map);
}

@function _calc-baseline-offset($font-map) {
  $_baseline-from-bottom: _calc-baseline-from-bottom($font-map);

  @return $_baseline-from-bottom % $global-rhythm-size;
}

@function _calc-offset($rhythm, $offset) {
  @if $offset == 0 {
    @return $rhythm;
  } @else if _unit($rhythm) == _unit($offset) {
    @return $rhythm + $offset;
  } @else {
    @return calc(#{$rhythm} - #{$offset});
  }
}

// Functions
// ----------------
@function rhythm($rhythm-steps, $offset: 0) {
  @return _calc-offset($rhythm-steps * $global-rhythm-size, $offset);
}

@function top-rhythm($font-map, $rhythm-steps, $offset: 0) {
  $_baseline-offset: _calc-baseline-offset($font-map);

  @if $_baseline-offset == 0 {
    @return rhythm($rhythm-steps, $offset);
  } @else if $rhythm-steps > 0 {
    $_rhythm: ($rhythm-steps - 1) * $global-rhythm-size + $_baseline-offset;

    @return _calc-offset($_rhythm, $offset);
  } @else if $rhythm-steps < 0 {
    $_rhythm: -(math.abs($rhythm-steps) * $global-rhythm-size - $_baseline-offset);

    @return _calc-offset($_rhythm, $offset);
  } @else {
    @return $offset;
  }
}

@function bottom-rhythm($font-map, $rhythm-steps, $offset: 0) {
  $_baseline-offset: _calc-baseline-offset($font-map);

  @if $_baseline-offset == 0 {
    @return rhythm($rhythm-steps, $offset);
  } @else if $rhythm-steps > 0 {
    $_rhythm: $rhythm-steps * $global-rhythm-size - $_baseline-offset;

    @return _calc-offset($_rhythm, $offset);
  } @else if $rhythm-steps < 0 {
    $_rhythm: -((math.abs($rhythm-steps) - 1) * $global-rhythm-size + $_baseline-offset);

    @return _calc-offset($_rhythm, $offset);
  } @else {
    @return $offset;
  }
}

@function mid-rhythm($top-font-map, $bottom-font-map, $rhythm-steps, $offset: 0) {
  @if $rhythm-steps < 1 {
    @error "The $rhythm-steps between two elements must larger or equal to 1, but the given value is #{$rhythm-steps}.";
  }

  $_top-font-bottom-rhythm: bottom-rhythm($top-font-map, $rhythm-steps);
  $_bottom-font-baseline-from-top: _calc-baseline-from-top($bottom-font-map);
  $_rhythm: $_top-font-bottom-rhythm - $_bottom-font-baseline-from-top;

  @return _calc-offset($_rhythm, $offset);
}
